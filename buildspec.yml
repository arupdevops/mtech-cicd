version: 0.2

env:
  variables:
    ECR_REPO: "292285526557.dkr.ecr.ap-south-1.amazonaws.com/mtech-cicd"
    IMAGE_TAG_LATEST: "latest"
    SNS_TOPIC_ARN: "arn:aws:sns:ap-south-1:292285526557:mtech-cicd-deploy-alerts"
    S3_BUCKET: "mtech-cicd-artifacts-arup-11467"
    AWS_REGION: "ap-south-1"
    AWS_DEFAULT_REGION: "ap-south-1"

phases:
  pre_build:
    commands:
      - echo "=== PRE_BUILD START ==="
      - aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "$ECR_REPO"

  build:
    commands:
      - echo "=== BUILD START === $(date)"
      - echo "üí• INTENTIONAL FAILURE FOR DEMO üí•"
      - exit 1   # <== This line forces the pipeline to fail here for demo purposes
      - pip install pytest
      - pytest --maxfail=1 --disable-warnings -q || { echo 'pytest failed'; exit 1; }
      - export COMMIT_COUNT=$(git rev-list --count HEAD 2>/dev/null || echo "0")
      - export IMAGE_TAG_V="v${COMMIT_COUNT}"
      - echo "TAGS: $IMAGE_TAG_LATEST $IMAGE_TAG_V"
      - docker build -t flask-api .
      - docker tag flask-api:latest "$ECR_REPO:$IMAGE_TAG_LATEST"
      - docker tag flask-api:latest "$ECR_REPO:$IMAGE_TAG_V"

  post_build:
    commands:
      - echo "=== POST_BUILD === $(date)"
      - echo "This section will NOT execute since the build intentionally failed."
      - echo "If it did, it would push to ECR and upload imagedefinitions.json"

artifacts:
  files:
    - imagedefinitions.json

finally:
  commands:
    - echo "=== FINALLY: Sending SNS notification if build failed === $(date)"
    - if [ "$CODEBUILD_BUILD_SUCCEEDING" = "1" ]; then
        echo "‚úÖ Build succeeded (unexpected in demo)";
        MSG="Build succeeded unexpectedly for $CODEBUILD_PROJECT ($CODEBUILD_BUILD_ID)";
      else
        echo "‚ùå Build failed intentionally for demo";
        MSG="Intentional demo failure: $CODEBUILD_PROJECT ($CODEBUILD_BUILD_ID)";
      fi
    - aws sns publish --topic-arn "$SNS_TOPIC_ARN" \
        --subject "CodeBuild Result: $CODEBUILD_PROJECT" \
        --message "$MSG" \
        --region "$AWS_REGION" || echo "SNS publish failed"

